/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.71
 * Generated at: 2023-01-28 18:07:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class main_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>게시판 연습해보기</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<h3># 게시판 만들어보기(1)</h3>\r\n");
      out.write("	\r\n");
      out.write("	<ul>\r\n");
      out.write("		<li>아무나 ID와 비밀번호를 설정하고 글을 쓸 수 있다.</li>\r\n");
      out.write("		<li>글 목록을 볼 때 한 페이지에 10개씩 나와야 한다.</li>\r\n");
      out.write("		<li>최근에 적은 글부터 보여야 한다.</li>\r\n");
      out.write("		<li>글 목록 아래에 다음 페이지 또는 원하는 페이지로 넘어갈 수 있는 기능이 있어야 한다.</li>\r\n");
      out.write("		<li>글 정보 테이블에 반드시 시퀀스를 통해 ID를 부여할 것</li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	\r\n");
      out.write("	<h3># 게시판 만들어보기(2)</h3>\r\n");
      out.write("	\r\n");
      out.write("	<ul>\r\n");
      out.write("		<li>만들어진 글 목록의 제목을 클릭하면 해당 글의 내용을 보는 페이지로 넘어가기</li>\r\n");
      out.write("		<li>글의 내용을 볼 때마다 조회수가 올라간다.</li>\r\n");
      out.write("		<li>목록 페이지의 적당한 위치에 글 쓰기 버튼을 만들고 \r\n");
      out.write("			그 버튼을 누르면 글을 쓸 수 있는 폼이 있는 페이지로 넘어가기</li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	\r\n");
      out.write("	<h3># 게시판 만들어보기(3)</h3>\r\n");
      out.write("\r\n");
      out.write("	<ul>\r\n");
      out.write("		<li>글 내용을 보는 곳에서 글 수정 버튼을 누르면 비밀번호를 입력하는 창으로 넘어가기</li>\r\n");
      out.write("		<li>비밀번호를 맞추면 글 내용을 수정하는 페이지로 넘어가기</li>\r\n");
      out.write("		<li>글 내용을 못 맞추면 전체 글 목록으로 넘어가기</li>\r\n");
      out.write("		<li>글 내용을 보는 곳에서 글 삭제 버튼을 누르면 비밀번호를 입력하는 창으로 넘어가기</li>\r\n");
      out.write("		<li>비밀번호를 맞추면 해당 글을 삭제 후 목록으로, 못 맞추면 삭제하지 않고 목록으로 넘어가기</li>\r\n");
      out.write("	</ul>\r\n");
      out.write("	\r\n");
      out.write("	<h3># 게시판 만들어보기 (4)</h3>\r\n");
      out.write("	\r\n");
      out.write("	<ul>\r\n");
      out.write("		<li>게시글 내용을 보는 곳 아래에는 댓글을 입력할 수 있다.</li>\r\n");
      out.write("		<li>댓글 입력자도 아이디와 비밀번호를 직접 입력하여 댓글을 작성할 수 있다.</li>\r\n");
      out.write("		<li>해당 글에 대한 댓글 개수가 목록에서 글 제목 오른쪽에 보여야 한다 ex : [3]</li>\r\n");
      out.write("	</ul>\r\n");
      out.write("\r\n");
      out.write("	<a href=\"");
      out.print(request.getContextPath() );
      out.write("/list\">게시판 보러 가기</a>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
